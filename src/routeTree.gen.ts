/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WorkspaceRouteImport } from './routes/workspace'
import { Route as StudyScheduleRouteImport } from './routes/study-schedule'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as QuizRouteImport } from './routes/quiz'
import { Route as NotesRouteImport } from './routes/notes'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AiGenerationRouteImport } from './routes/ai-generation'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignUpSsoCallbackRouteImport } from './routes/sign-up/sso-callback'
import { Route as SignInSsoCallbackRouteImport } from './routes/sign-in/sso-callback'
import { Route as QuizSessionIdRouteImport } from './routes/quiz.$sessionId'
import { Route as QuizQuizIdRouteImport } from './routes/quiz/$quizId'

const WorkspaceRoute = WorkspaceRouteImport.update({
  id: '/workspace',
  path: '/workspace',
  getParentRoute: () => rootRouteImport,
} as any)
const StudyScheduleRoute = StudyScheduleRouteImport.update({
  id: '/study-schedule',
  path: '/study-schedule',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizRoute = QuizRouteImport.update({
  id: '/quiz',
  path: '/quiz',
  getParentRoute: () => rootRouteImport,
} as any)
const NotesRoute = NotesRouteImport.update({
  id: '/notes',
  path: '/notes',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AiGenerationRoute = AiGenerationRouteImport.update({
  id: '/ai-generation',
  path: '/ai-generation',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpSsoCallbackRoute = SignUpSsoCallbackRouteImport.update({
  id: '/sso-callback',
  path: '/sso-callback',
  getParentRoute: () => SignUpRoute,
} as any)
const SignInSsoCallbackRoute = SignInSsoCallbackRouteImport.update({
  id: '/sso-callback',
  path: '/sso-callback',
  getParentRoute: () => SignInRoute,
} as any)
const QuizSessionIdRoute = QuizSessionIdRouteImport.update({
  id: '/$sessionId',
  path: '/$sessionId',
  getParentRoute: () => QuizRoute,
} as any)
const QuizQuizIdRoute = QuizQuizIdRouteImport.update({
  id: '/$quizId',
  path: '/$quizId',
  getParentRoute: () => QuizRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ai-generation': typeof AiGenerationRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/notes': typeof NotesRoute
  '/quiz': typeof QuizRouteWithChildren
  '/sign-in': typeof SignInRouteWithChildren
  '/sign-up': typeof SignUpRouteWithChildren
  '/study-schedule': typeof StudyScheduleRoute
  '/workspace': typeof WorkspaceRoute
  '/quiz/$quizId': typeof QuizQuizIdRoute
  '/quiz/$sessionId': typeof QuizSessionIdRoute
  '/sign-in/sso-callback': typeof SignInSsoCallbackRoute
  '/sign-up/sso-callback': typeof SignUpSsoCallbackRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ai-generation': typeof AiGenerationRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/notes': typeof NotesRoute
  '/quiz': typeof QuizRouteWithChildren
  '/sign-in': typeof SignInRouteWithChildren
  '/sign-up': typeof SignUpRouteWithChildren
  '/study-schedule': typeof StudyScheduleRoute
  '/workspace': typeof WorkspaceRoute
  '/quiz/$quizId': typeof QuizQuizIdRoute
  '/quiz/$sessionId': typeof QuizSessionIdRoute
  '/sign-in/sso-callback': typeof SignInSsoCallbackRoute
  '/sign-up/sso-callback': typeof SignUpSsoCallbackRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/ai-generation': typeof AiGenerationRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/notes': typeof NotesRoute
  '/quiz': typeof QuizRouteWithChildren
  '/sign-in': typeof SignInRouteWithChildren
  '/sign-up': typeof SignUpRouteWithChildren
  '/study-schedule': typeof StudyScheduleRoute
  '/workspace': typeof WorkspaceRoute
  '/quiz/$quizId': typeof QuizQuizIdRoute
  '/quiz/$sessionId': typeof QuizSessionIdRoute
  '/sign-in/sso-callback': typeof SignInSsoCallbackRoute
  '/sign-up/sso-callback': typeof SignUpSsoCallbackRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/ai-generation'
    | '/dashboard'
    | '/login'
    | '/notes'
    | '/quiz'
    | '/sign-in'
    | '/sign-up'
    | '/study-schedule'
    | '/workspace'
    | '/quiz/$quizId'
    | '/quiz/$sessionId'
    | '/sign-in/sso-callback'
    | '/sign-up/sso-callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ai-generation'
    | '/dashboard'
    | '/login'
    | '/notes'
    | '/quiz'
    | '/sign-in'
    | '/sign-up'
    | '/study-schedule'
    | '/workspace'
    | '/quiz/$quizId'
    | '/quiz/$sessionId'
    | '/sign-in/sso-callback'
    | '/sign-up/sso-callback'
  id:
    | '__root__'
    | '/'
    | '/ai-generation'
    | '/dashboard'
    | '/login'
    | '/notes'
    | '/quiz'
    | '/sign-in'
    | '/sign-up'
    | '/study-schedule'
    | '/workspace'
    | '/quiz/$quizId'
    | '/quiz/$sessionId'
    | '/sign-in/sso-callback'
    | '/sign-up/sso-callback'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AiGenerationRoute: typeof AiGenerationRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  NotesRoute: typeof NotesRoute
  QuizRoute: typeof QuizRouteWithChildren
  SignInRoute: typeof SignInRouteWithChildren
  SignUpRoute: typeof SignUpRouteWithChildren
  StudyScheduleRoute: typeof StudyScheduleRoute
  WorkspaceRoute: typeof WorkspaceRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/workspace': {
      id: '/workspace'
      path: '/workspace'
      fullPath: '/workspace'
      preLoaderRoute: typeof WorkspaceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/study-schedule': {
      id: '/study-schedule'
      path: '/study-schedule'
      fullPath: '/study-schedule'
      preLoaderRoute: typeof StudyScheduleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quiz': {
      id: '/quiz'
      path: '/quiz'
      fullPath: '/quiz'
      preLoaderRoute: typeof QuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notes': {
      id: '/notes'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai-generation': {
      id: '/ai-generation'
      path: '/ai-generation'
      fullPath: '/ai-generation'
      preLoaderRoute: typeof AiGenerationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up/sso-callback': {
      id: '/sign-up/sso-callback'
      path: '/sso-callback'
      fullPath: '/sign-up/sso-callback'
      preLoaderRoute: typeof SignUpSsoCallbackRouteImport
      parentRoute: typeof SignUpRoute
    }
    '/sign-in/sso-callback': {
      id: '/sign-in/sso-callback'
      path: '/sso-callback'
      fullPath: '/sign-in/sso-callback'
      preLoaderRoute: typeof SignInSsoCallbackRouteImport
      parentRoute: typeof SignInRoute
    }
    '/quiz/$sessionId': {
      id: '/quiz/$sessionId'
      path: '/$sessionId'
      fullPath: '/quiz/$sessionId'
      preLoaderRoute: typeof QuizSessionIdRouteImport
      parentRoute: typeof QuizRoute
    }
    '/quiz/$quizId': {
      id: '/quiz/$quizId'
      path: '/$quizId'
      fullPath: '/quiz/$quizId'
      preLoaderRoute: typeof QuizQuizIdRouteImport
      parentRoute: typeof QuizRoute
    }
  }
}

interface QuizRouteChildren {
  QuizQuizIdRoute: typeof QuizQuizIdRoute
  QuizSessionIdRoute: typeof QuizSessionIdRoute
}

const QuizRouteChildren: QuizRouteChildren = {
  QuizQuizIdRoute: QuizQuizIdRoute,
  QuizSessionIdRoute: QuizSessionIdRoute,
}

const QuizRouteWithChildren = QuizRoute._addFileChildren(QuizRouteChildren)

interface SignInRouteChildren {
  SignInSsoCallbackRoute: typeof SignInSsoCallbackRoute
}

const SignInRouteChildren: SignInRouteChildren = {
  SignInSsoCallbackRoute: SignInSsoCallbackRoute,
}

const SignInRouteWithChildren =
  SignInRoute._addFileChildren(SignInRouteChildren)

interface SignUpRouteChildren {
  SignUpSsoCallbackRoute: typeof SignUpSsoCallbackRoute
}

const SignUpRouteChildren: SignUpRouteChildren = {
  SignUpSsoCallbackRoute: SignUpSsoCallbackRoute,
}

const SignUpRouteWithChildren =
  SignUpRoute._addFileChildren(SignUpRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AiGenerationRoute: AiGenerationRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  NotesRoute: NotesRoute,
  QuizRoute: QuizRouteWithChildren,
  SignInRoute: SignInRouteWithChildren,
  SignUpRoute: SignUpRouteWithChildren,
  StudyScheduleRoute: StudyScheduleRoute,
  WorkspaceRoute: WorkspaceRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
